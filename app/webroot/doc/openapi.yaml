openapi: 3.0.0
info:
  version: 1.0.0
  title: MISP API
servers:
  - url: /
tags:
  - name: Attributes
    description: Attributes in MISP can be network indicators (e.g. IP address), system indicators (e.g. a string in memory) or even bank account details.
    externalDocs:
      url: https://www.circl.lu/doc/misp/GLOSSARY.html#misp-attribute
  - name: Events
    description: MISP events are encapsulations for contextually related information represented as attribute and object.
    externalDocs:
      url: https://www.circl.lu/doc/misp/GLOSSARY.html#misp-event
  - name: Galaxies
    description: Galaxies in MISP are a method used to express a large object called cluster that can be attached to MISP events or attributes.
    externalDocs:
      url: https://www.circl.lu/doc/misp/galaxy/

paths:
  /attributes/add/{eventId}:
    post:
      summary: "Add an attribute"
      operationId: addAttribute
      tags:
        - Attributes
      parameters:
        - $ref: "#/components/parameters/eventIdParameter"
      requestBody:
        $ref: "#/components/requestBodies/AddAttributeRequest"
      responses:
        "200":
          $ref: "#/components/responses/AttributeResponse"
        "403":
          $ref: "#/components/responses/UnauthorizedApiErrorResponse"
        default:
          $ref: "#/components/responses/ApiErrorResponse"

  /attributes/edit/{attributeId}:
    put:
      summary: "Edit an attribute"
      operationId: editAttribute
      tags:
        - Attributes
      parameters:
        - $ref: "#/components/parameters/attributeIdParameter"
      requestBody:
        $ref: "#/components/requestBodies/EditAttributeRequest"
      responses:
        "200":
          $ref: "#/components/responses/AttributeResponse"
        "403":
          $ref: "#/components/responses/UnauthorizedApiErrorResponse"
        "404":
          $ref: "#/components/responses/NotFoundApiErrorResponse"
        default:
          $ref: "#/components/responses/ApiErrorResponse"

  /attributes/delete/{attributeId}:
    delete:
      summary: "Delete an attribute"
      operationId: deleteAttribute
      tags:
        - Attributes
      parameters:
        - $ref: "#/components/parameters/attributeIdParameter"
      responses:
        "200":
          $ref: "#/components/responses/DeleteAttributeResponse"
        "403":
          $ref: "#/components/responses/UnauthorizedApiErrorResponse"
        "404":
          $ref: "#/components/responses/NotFoundApiErrorResponse"
        default:
          $ref: "#/components/responses/ApiErrorResponse"

  /attributes/restore/{attributeId}:
    post:
      summary: "Restore an attribute"
      operationId: restoreAttribute
      tags:
        - Attributes
      parameters:
        - $ref: "#/components/parameters/attributeIdParameter"
      responses:
        "200":
          $ref: "#/components/responses/AttributeResponse"
        "403":
          $ref: "#/components/responses/UnauthorizedApiErrorResponse"
        "404":
          $ref: "#/components/responses/NotFoundApiErrorResponse"
        default:
          $ref: "#/components/responses/ApiErrorResponse"

  /attributes/addTag/{attributeId}/{tagId}:
    post:
      summary: "Add a tag to an attribute"
      operationId: tagAttribute
      tags:
        - Attributes
      parameters:
        - $ref: "#/components/parameters/attributeIdParameter"
        - $ref: "#/components/parameters/tagIdParameter"
      responses:
        "200":
          $ref: "#/components/responses/AddAttributeTagResponse"
        "403":
          $ref: "#/components/responses/UnauthorizedApiErrorResponse"
        "404":
          $ref: "#/components/responses/NotFoundApiErrorResponse"
        default:
          $ref: "#/components/responses/ApiErrorResponse"

  /attributes/removeTag/{attributeId}/{tagId}:
    post:
      summary: "Remove a tag from an attribute"
      operationId: untagAttribute
      tags:
        - Attributes
      parameters:
        - $ref: "#/components/parameters/attributeIdParameter"
        - $ref: "#/components/parameters/tagIdParameter"
      responses:
        "200":
          $ref: "#/components/responses/RemoveAttributeTagResponse"
        "403":
          $ref: "#/components/responses/UnauthorizedApiErrorResponse"
        "404":
          $ref: "#/components/responses/NotFoundApiErrorResponse"
        default:
          $ref: "#/components/responses/ApiErrorResponse"

  /attributes:
    get:
      summary: "Get a list of attributes"
      operationId: getAttributes
      tags:
        - Attributes
      responses:
        "200":
          $ref: "#/components/responses/AttributeListResponse"
        "403":
          $ref: "#/components/responses/UnauthorizedApiErrorResponse"
        default:
          $ref: "#/components/responses/ApiErrorResponse"

  /attributes/view/{attributeId}:
    get:
      summary: "Get an attribute by ID"
      operationId: viewAttribute
      tags:
        - Attributes
      parameters:
        - $ref: "#/components/parameters/attributeIdParameter"
      responses:
        "200":
          $ref: "#/components/responses/AttributeResponse"
        "403":
          $ref: "#/components/responses/UnauthorizedApiErrorResponse"
        default:
          $ref: "#/components/responses/ApiErrorResponse"

  /attributes/restSearch:
    post:
      summary: "Get a filtered and paginated list of attributes"
      operationId: restSearchAttributes
      tags:
        - Attributes
      parameters:
        - $ref: "#/components/parameters/returnFormatParameter"
      requestBody:
        $ref: "#/components/requestBodies/RestSearchAttributesRequest"
      responses:
        "200":
          $ref: "#/components/responses/AttributesRestSearchResponse"
        "403":
          $ref: "#/components/responses/UnauthorizedApiErrorResponse"
        default:
          $ref: "#/components/responses/ApiErrorResponse"

  /attributes/attributeStatistics/{context}/{percentage}:
    get:
      summary: "Get a filtered and paginated list of attributes"
      operationId: getAttributeStatistics
      tags:
        - Attributes
      parameters:
        - $ref: "#/components/parameters/attributeStatisticsContextParameter"
        - $ref: "#/components/parameters/attributeStatisticsPercentageParameter"
      responses:
        "200":
          $ref: "#/components/responses/AttributeStatisticsResponse"
        "403":
          $ref: "#/components/responses/UnauthorizedApiErrorResponse"
        default:
          $ref: "#/components/responses/ApiErrorResponse"

  /attributes/describeTypes:
    get:
      summary: "Get a list of the available attribute types"
      operationId: describeAttributeTypes
      tags:
        - Attributes
      responses:
        "200":
          $ref: "#/components/responses/DescribeAttributeTypesResponse"
        "403":
          $ref: "#/components/responses/UnauthorizedApiErrorResponse"
        default:
          $ref: "#/components/responses/ApiErrorResponse"

  /events/add:
    post:
      summary: "Add event"
      operationId: addEvent
      tags:
        - Events
      requestBody:
        $ref: "#/components/requestBodies/AddEventRequest"
      responses:
        "200":
          $ref: "#/components/responses/AddEventResponse"
        "403":
          $ref: "#/components/responses/UnauthorizedApiErrorResponse"
        default:
          $ref: "#/components/responses/ApiErrorResponse"

  /events/edit/{eventId}:
    put:
      summary: "Edit event"
      operationId: editEvent
      tags:
        - Events
      parameters:
        - $ref: "#/components/parameters/eventIdParameter"
      requestBody:
        $ref: "#/components/requestBodies/EditEventRequest"
      responses:
        "200":
          $ref: "#/components/responses/EditEventResponse"
        "403":
          $ref: "#/components/responses/UnauthorizedApiErrorResponse"
        default:
          $ref: "#/components/responses/ApiErrorResponse"

  /events/delete/{eventId}:
    delete:
      summary: "Delete event"
      operationId: deleteEvent
      tags:
        - Events
      parameters:
        - $ref: "#/components/parameters/eventIdParameter"
      responses:
        "200":
          $ref: "#/components/responses/DeleteEventResponse"
        "403":
          $ref: "#/components/responses/UnauthorizedApiErrorResponse"
        default:
          $ref: "#/components/responses/ApiErrorResponse"

  /events:
    get:
      summary: "Get a list of events"
      operationId: getEvents
      tags:
        - Events
      responses:
        "200":
          $ref: "#/components/responses/ExtendedEventListResponse"
        "403":
          $ref: "#/components/responses/UnauthorizedApiErrorResponse"
        default:
          $ref: "#/components/responses/ApiErrorResponse"

  /events/index:
    post:
      summary: "Search events"
      operationId: searchEvents
      tags:
        - Events
      requestBody:
        $ref: "#/components/requestBodies/SearchEventRequest"
      responses:
        "200":
          $ref: "#/components/responses/ExtendedEventListResponse"
        "403":
          $ref: "#/components/responses/UnauthorizedApiErrorResponse"
        default:
          $ref: "#/components/responses/ApiErrorResponse"

  /events/view/{eventId}:
    get:
      summary: "View event"
      operationId: viewEvent
      tags:
        - Events
      parameters:
        - $ref: "#/components/parameters/eventIdParameter"
      responses:
        "200":
          $ref: "#/components/responses/ExtendedEventResponse"
        "403":
          $ref: "#/components/responses/UnauthorizedApiErrorResponse"
        default:
          $ref: "#/components/responses/ApiErrorResponse"

  /events/restSearch:
    post:
      summary: "Get a filtered and paginated list of events"
      operationId: restSearchEvents
      tags:
        - Events
      parameters:
        - $ref: "#/components/parameters/returnFormatParameter"
      requestBody:
        $ref: "#/components/requestBodies/RestSearchEventsRequest"
      responses:
        "200":
          $ref: "#/components/responses/EventsRestSearchResponse"
        "403":
          $ref: "#/components/responses/UnauthorizedApiErrorResponse"
        default:
          $ref: "#/components/responses/ApiErrorResponse"

  /events/addTag/{eventId}/{tagId}:
    post:
      summary: "Add event tag"
      operationId: tagEvent
      tags:
        - Events
      parameters:
        - $ref: "#/components/parameters/eventIdParameter"
        - $ref: "#/components/parameters/tagIdParameter"
      responses:
        "200":
          $ref: "#/components/responses/AddEventTagResponse"
        "403":
          $ref: "#/components/responses/UnauthorizedApiErrorResponse"
        default:
          $ref: "#/components/responses/ApiErrorResponse"

  /events/removeTag/{eventId}/{tagId}:
    post:
      summary: "Remove event tag"
      operationId: untagEvent
      tags:
        - Events
      parameters:
        - $ref: "#/components/parameters/eventIdParameter"
        - $ref: "#/components/parameters/tagIdParameter"
      responses:
        "200":
          $ref: "#/components/responses/RemoveEventTagResponse"
        "403":
          $ref: "#/components/responses/UnauthorizedApiErrorResponse"
        default:
          $ref: "#/components/responses/ApiErrorResponse"

  /galaxies:
    get:
      summary: "Get galaxies"
      operationId: getGalaxies
      tags:
        - Galaxies
      responses:
        "200":
          $ref: "#/components/responses/GalaxyListResponse"
        "403":
          $ref: "#/components/responses/UnauthorizedApiErrorResponse"
        default:
          $ref: "#/components/responses/ApiErrorResponse"
    post:
      summary: "Search galaxies"
      operationId: searchGalaxies
      tags:
        - Galaxies
      requestBody:
        $ref: "#/components/requestBodies/SearchGalaxyRequest"
      responses:
        "200":
          $ref: "#/components/responses/GalaxyListResponse"
        "403":
          $ref: "#/components/responses/UnauthorizedApiErrorResponse"
        default:
          $ref: "#/components/responses/ApiErrorResponse"

  /galaxies/view/{galaxyId}:
    get:
      summary: "Get a galaxy by ID"
      operationId: viewGalaxies
      tags:
        - Galaxies
      parameters:
        - $ref: "#/components/parameters/galaxyIdParameter"
      responses:
        "200":
          $ref: "#/components/responses/ExtendedGalaxyResponse"
        "403":
          $ref: "#/components/responses/UnauthorizedApiErrorResponse"
        default:
          $ref: "#/components/responses/ApiErrorResponse"

  /galaxies/update:
    post:
      summary: "Force update the galaxies with the galaxy json definitions."
      operationId: updateGalaxies
      tags:
        - Galaxies
      responses:
        "200":
          $ref: "#/components/responses/UpdateGalaxiesResponse"
        "403":
          $ref: "#/components/responses/UnauthorizedApiErrorResponse"
        "404":
          $ref: "#/components/responses/NotFoundApiErrorResponse"
        default:
          $ref: "#/components/responses/ApiErrorResponse"

  /galaxies/delete/{galaxyId}:
    delete:
      summary: "Delete a galaxy"
      operationId: deleteGalaxy
      tags:
        - Galaxies
      parameters:
        - $ref: "#/components/parameters/galaxyIdParameter"
      responses:
        "200":
          $ref: "#/components/responses/DeleteGalaxyResponse"
        "403":
          $ref: "#/components/responses/UnauthorizedApiErrorResponse"
        "404":
          $ref: "#/components/responses/NotFoundApiErrorResponse"
        default:
          $ref: "#/components/responses/ApiErrorResponse"

  /galaxies/import:
    post:
      summary: "Import a galaxy cluster"
      operationId: importGalaxyCluster
      tags:
        - Galaxies
      requestBody:
        $ref: "#/components/requestBodies/ImportGalaxyClusterRequest"
      responses:
        "200":
          $ref: "#/components/responses/ImportGalaxyClusterResponse"
        "403":
          $ref: "#/components/responses/UnauthorizedApiErrorResponse"
        "404":
          $ref: "#/components/responses/NotFoundApiErrorResponse"
        default:
          $ref: "#/components/responses/ApiErrorResponse"

  /galaxies/export/{galaxyId}:
    post:
      summary: "Export a galaxy clusters"
      operationId: exportGalaxyClusters
      tags:
        - Galaxies
      parameters:
        - $ref: "#/components/parameters/galaxyIdParameter"
      requestBody:
        $ref: "#/components/requestBodies/ExportGalaxyClusterRequest"
      responses:
        "200":
          $ref: "#/components/responses/ExportGalaxyClustersResponse"
        "403":
          $ref: "#/components/responses/UnauthorizedApiErrorResponse"
        "404":
          $ref: "#/components/responses/NotFoundApiErrorResponse"
        default:
          $ref: "#/components/responses/ApiErrorResponse"

  /galaxies/attachCluster/{attachTargetId}/{attachTargetType}:
    post:
      summary: "Attach the galaxy cluster tag a given entity."
      operationId: attachGalaxyCluster
      tags:
        - Galaxies
      parameters:
        - $ref: "#/components/parameters/attachTargetIdParameter"
        - $ref: "#/components/parameters/attachTargetTypeParameter"
      requestBody:
        $ref: "#/components/requestBodies/AttachGalaxyClusterRequest"
      responses:
        "200":
          $ref: "#/components/responses/AttachGalaxyClusterResponse"
        "403":
          $ref: "#/components/responses/UnauthorizedApiErrorResponse"
        "404":
          $ref: "#/components/responses/NotFoundApiErrorResponse"
        default:
          $ref: "#/components/responses/ApiErrorResponse"

components:
  schemas:
    # Attributes
    AttributeId:
      type: string
      format: int32
      maxLength: 10
      example: "12345"

    AttributeType:
      type: string
      maxLength: 100
      example: "ip-src"

    AttributeValue:
      type: string
      maxLength: 131071
      example: "127.0.0.1"

    AttributeCategory:
      type: string
      maxLength: 255
      example: "Payload delivery"

    AttributeComment:
      type: string
      maxLength: 65535
      example: "logged source ip"

    AttributeEventUUID:
      $ref: "#/components/schemas/UUID"

    AttributeAttachment:
      description: "base64 representation of the attachment"
      type: string
      format: byte

    AttributeNoId:
      type: object
      properties:
        event_id:
          $ref: "#/components/schemas/EventId"
        object_id:
          $ref: "#/components/schemas/ObjectId"
        object_relation:
          nullable: true
          allOf:
            - $ref: "#/components/schemas/ObjectRelation"
        category:
          $ref: "#/components/schemas/AttributeCategory"
        type:
          $ref: "#/components/schemas/AttributeType"
        value:
          $ref: "#/components/schemas/AttributeValue"
        to_ids:
          $ref: "#/components/schemas/ToIDS"
        uuid:
          $ref: "#/components/schemas/UUID"
        timestamp:
          nullable: true
          allOf:
            - $ref: "#/components/schemas/Timestamp"
        distribution:
          $ref: "#/components/schemas/DistributionLevelId"
        sharing_group_id:
          $ref: "#/components/schemas/SharingGroupId"
        comment:
          $ref: "#/components/schemas/AttributeComment"
        deleted:
          $ref: "#/components/schemas/SoftDeletedFlag"
        disable_correlation:
          $ref: "#/components/schemas/DisableCorrelationFlag"
        first_seen:
          nullable: true
          allOf:
            - $ref: "#/components/schemas/MicroTimestamp"
        last_seen:
          nullable: true
          allOf:
            - $ref: "#/components/schemas/MicroTimestamp"

    Attribute:
      allOf:
        - type: object
          properties:
            id:
              $ref: "#/components/schemas/AttributeId"
        - $ref: "#/components/schemas/AttributeNoId"

    ExtendedAttribute:
      allOf:
        - $ref: "#/components/schemas/Attribute"
        - type: object
          properties:
            data:
              description: "Present if `withAttachments` was set to *true* in the rest search request and the attribute contains an attachment"
              $ref: "#/components/schemas/AttributeAttachment"
        - type: object
          properties:
            event_uuid:
              description: "Present if `includeEventUuid` was set to *true* in the rest search request"
              nullable: true
              $ref: "#/components/schemas/UUID"
        - type: object
          properties:
            decay_score:
              description: "Present if `includeDecayScore` was set to *true* in the rest search request"
              nullable: true
              $ref: "#/components/schemas/DecayScoreList"

    AttributeList:
      type: array
      items:
        $ref: "#/components/schemas/Attribute"

    AttributeRestSearchList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ExtendedAttribute"
          - type: object
            properties:
              Event:
                $ref: "#/components/schemas/Event"
          - type: object
            properties:
              Object:
                type: object
          - type: object
            properties:
              Tag:
                description: "Present if `includeEventTags` was set to *true* in the rest search request"
                nullable: true
                $ref: "#/components/schemas/TagList"

    AttributeStatisticsResponse:
      description: Dictionary of attribute types/categories showing the ammount of occurences/percentage.
      type: object
      example:
        - "Antivirus detection": "10"
        - "Artifacts dropped": "20"

    DescribeAttributeTypesResponse:
      description: "Lists available attribute types, default categories and category-type mappings."
      type: object
      properties:
        sane_defaults:
          type: object
          example:
            md5:
              default_category: "Payload delivery"
              to_ids: 1
            pdb:
              default_category: "Artifacts dropped"
              to_ids: 0
        types:
          type: array
          items:
            $ref: "#/components/schemas/AttributeType"
        categories:
          type: array
          items:
            $ref: "#/components/schemas/AttributeCategory"
        category_type_mappings:
          type: object
          example:
            "Internal reference":
              - "text"
              - "link"
              - "comment"
              - "other"
            "Antivirus detection":
              - "link"
              - "comment"
              - "text"
              - "hex"
              - "other"

    # Decay Models
    DecayingModelParameters:
      type: object
      properties:
        lifetime:
          type: number
          format: float
          example: 3
        decay_speed:
          type: number
          format: float
          example: 2.3
        threshold:
          type: number
          format: float
          example: 30
        default_base_score:
          type: number
          format: float
          example: 80
        base_score_config:
          type: object
          example:
            estimative-language:confidence-in-analytic-judgment: 0.25
            estimative-language:likelihood-probability: 0.25
            phishing:psychological-acceptability: 0.25
            phishing:state: 0.20

    DecayingModel:
      type: object
      properties:
        id:
          type: string
          format: int32
          maxLength: 10
          example: "12345"
        name:
          type: string
          maxLength: 255
          example: "Phishing model"

    FullDecayingModel:
      description: "Present if the `includeFullModel` flag was set to *true* in the rest search request"
      type: object
      properties:
        id:
          type: string
          format: int32
          maxLength: 10
          example: "12345"
        uuid:
          $ref: "#/components/schemas/UUID"
        name:
          type: string
          maxLength: 255
          example: "Phishing model"
        description:
          type: string
          maxLength: 65535
          example: "Simple model to rapidly decay phishing website."
        parameters:
          $ref: "#/components/schemas/DecayingModelParameters"
        attribute_types:
          type: array
          items:
            $ref: "#/components/schemas/AttributeType"
        org_id:
          $ref: "#/components/schemas/OrganisationId"
        enabled:
          type: boolean
        all_orgs:
          type: boolean
        ref:
          type: array
          items:
            type: string
            example: "https://arxiv.org/abs/1902.03914"
        formula:
          type: string
          enum:
            - Polynomial
        version:
          type: string
          example: "2"
        default:
          type: boolean
        isEditable:
          type: boolean

    DecayScore:
      type: object
      properties:
        score:
          type: number
          format: float
          example: 10.5
        base_score:
          type: number
          format: float
          example: 80
        decayed:
          type: boolean
        DecayingModel:
          oneOf:
            - $ref: "#/components/schemas/DecayingModel"
            - $ref: "#/components/schemas/FullDecayingModel"

    DecayScoreList:
      type: array
      items:
        $ref: "#/components/schemas/DecayScore"

    # Events
    EventId:
      type: string
      format: int32
      maxLength: 10
      example: "12345"

    EventInfo:
      type: string
      maxLength: 65535
      example: "logged source ip"

    EventAttributeCount:
      type: string
      format: int64
      example: "321"

    EventProposalEmailLock:
      type: boolean

    EventOrganisation:
      type: object
      properties:
        id:
          nullable: true
          $ref: "#/components/schemas/OrganisationId"
        name:
          $ref: "#/components/schemas/OrganisationName"
        uuid:
          $ref: "#/components/schemas/UUID"

    EventTagId:
      type: string
      format: int32
      maxLength: 10
      example: "12345"

    EventTag:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/EventTagId"
        event_id:
          $ref: "#/components/schemas/EventId"
        tag_id:
          $ref: "#/components/schemas/TagId"
        local:
          $ref: "#/components/schemas/IsLocal"
        Tag:
          $ref: "#/components/schemas/Tag"

    EventTagList:
      type: array
      items:
        $ref: "#/components/schemas/EventTag"

    EventReport: # TODO: describe
      type: object

    EventNoId:
      type: object
      properties:
        org_id:
          $ref: "#/components/schemas/OrganisationId"
        distribution:
          $ref: "#/components/schemas/DistributionLevelId"
        info:
          $ref: "#/components/schemas/EventInfo"
        orgc_id:
          $ref: "#/components/schemas/OrganisationId"
        uuid:
          $ref: "#/components/schemas/UUID"
        published:
          $ref: "#/components/schemas/PublishedFlag"
        analysis:
          $ref: "#/components/schemas/AnalysisLevelId"
        attribute_count:
          $ref: "#/components/schemas/EventAttributeCount"
        timestamp:
          nullable: true
          allOf:
            - $ref: "#/components/schemas/Timestamp"
        sharing_group_id:
          $ref: "#/components/schemas/SharingGroupId"
        proposal_email_lock:
          $ref: "#/components/schemas/EventProposalEmailLock"
        locked:
          $ref: "#/components/schemas/IsLocked"
        threat_level_id:
          $ref: "#/components/schemas/ThreatLevelId"
        publish_timestamp:
          $ref: "#/components/schemas/Timestamp"
        sighting_timestamp:
          $ref: "#/components/schemas/Timestamp"
        disable_correlation:
          $ref: "#/components/schemas/DisableCorrelationFlag"
        extends_uuid:
          $ref: "#/components/schemas/ExtendsUUID"

    Event:
      allOf:
        - type: object
          properties:
            id:
              $ref: "#/components/schemas/EventId"
        - $ref: "#/components/schemas/EventNoId"

    ExtendedEvent:
      allOf:
        - $ref: "#/components/schemas/Event"
        - type: object
          properties:
            Org:
              $ref: "#/components/schemas/EventOrganisation"
        - type: object
          properties:
            Orgc:
              $ref: "#/components/schemas/EventOrganisation"
        - type: object
          properties:
            Attribute:
              $ref: "#/components/schemas/AttributeList"
        - type: object
          properties:
            ShadowAttribute:
              $ref: "#/components/schemas/AttributeList"
        - type: object
          properties:
            RelatedEvent:
              type: array
              items:
                type: object
                properties:
                  Event:
                    $ref: "#/components/schemas/ExtendedEvent"
        - type: object
          properties:
            EventTag:
              $ref: "#/components/schemas/EventTagList"
      required:
        - Org
        - Orgc

    CreatedEvent:
      type: object
      properties:
        Event:
          allOf:
            - $ref: "#/components/schemas/ExtendedEvent"
            - type: object
              properties:
                event_creator_email:
                  type: string
                  format: email
            - type: object
              properties:
                Galaxy:
                  type: array
                  items:
                    $ref: "#/components/schemas/Galaxy"
            - type: object
              properties:
                Object:
                  type: array
                  items:
                    $ref: "#/components/schemas/Object"
            - type: object
              properties:
                EventReport:
                  type: array
                  items:
                    $ref: "#/components/schemas/EventReport"

    UpdatedEvent:
      type: object
      properties:
        Event:
          allOf:
            - $ref: "#/components/schemas/ExtendedEvent"
            - type: object
              properties:
                event_creator_email:
                  type: string
                  format: email
            - type: object
              properties:
                Galaxy:
                  type: array
                  items:
                    $ref: "#/components/schemas/Galaxy"
            - type: object
              properties:
                Object:
                  type: array
                  items:
                    $ref: "#/components/schemas/Object"
            - type: object
              properties:
                EventReport:
                  type: array
                  items:
                    $ref: "#/components/schemas/EventReport"
            - type: object
              properties:
                Tag:
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"

    MinimalEvent:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/EventId"
        timestamp:
          $ref: "#/components/schemas/Timestamp"
        sighting_timestamp:
          $ref: "#/components/schemas/Timestamp"
        published:
          $ref: "#/components/schemas/PublishedFlag"
        uuid:
          $ref: "#/components/schemas/UUID"
        orgc_uuid:
          $ref: "#/components/schemas/UUID"
      required:
        - id
        - timestamp
        - sighting_timestamp
        - published
        - uuid
        - orgc_uuid

    EventList:
      type: array
      items:
        $ref: "#/components/schemas/Event"

    ExtendedEventList:
      type: array
      items:
        $ref: "#/components/schemas/ExtendedEvent"

    MinimalEventList:
      type: array
      items:
        $ref: "#/components/schemas/MinimalEvent"

    EventRestSearchList:
      type: array
      items:
        type: object
        properties:
          Event:
            type: object
            allOf:
              - $ref: "#/components/schemas/ExtendedEvent"
              - type: object
                properties:
                  Event:
                    $ref: "#/components/schemas/MinimalEvent"

    # Objects
    Object: # TODO: describe
      type: object

    # Galaxies
    GalaxyId:
      type: string
      format: int32
      maxLength: 10
      example: "12345"

    GalaxyName:
      type: string
      maxLength: 255
      example: "Ransomware"

    GalaxyType:
      type: string
      maxLength: 255
      example: "ransomware"

    GalaxyDescription:
      type: string
      maxLength: 65535
      example: "Ransomware galaxy based on ..."

    GalaxyVersion:
      type: string
      maxLength: 255
      example: "1"

    GalaxyNamespace:
      type: string
      maxLength: 255
      example: "misp"

    Galaxy:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/GalaxyId"
        uuid:
          $ref: "#/components/schemas/UUID"
        name:
          $ref: "#/components/schemas/GalaxyName"
        type:
          $ref: "#/components/schemas/GalaxyType"
        description:
          $ref: "#/components/schemas/GalaxyDescription"
        version:
          $ref: "#/components/schemas/GalaxyVersion"
        icon:
          $ref: "#/components/schemas/Icon"
        namespace:
          $ref: "#/components/schemas/GalaxyNamespace"
        kill_chain_order:
          type: object
          nullable: true
          example:
            fraud-tactics:
              - "Initiation"
              - "Target Compromise"
              - "Perform Fraud"
              - "Obtain Fraudulent Assets"
              - "Assets Transfer"
              - "Monetisation"

    GalaxyClusterId:
      type: string
      format: int32
      maxLength: 10
      example: "12345"

    GalaxyClusterValue:
      type: string
      maxLength: 65535
      example: "Brute Force - T1110"

    GalaxyClusterType:
      type: string
      maxLength: 255
      example: "mitre-enterprise-attack-attack-pattern"

    GalaxyClusterDescription:
      type: string
      maxLength: 65535
      example: "Adversaries may use brute force techniques to attempt access to accounts when passwords are unknown or when password hashes are obtained..."

    GalaxyClusterSource:
      type: string
      maxLength: 255
      example: "https://github.com/mitre/cti"

    GalaxyClusterAuthors:
      type: array
      items:
        type: string
        example: "MITRE"

    GalaxyClusterVersion:
      type: string
      maxLength: 255
      example: "1"

    GalaxyElementId:
      type: string
      format: int32
      maxLength: 10
      example: "12345"

    GalaxyElementKey:
      type: string
      maxLength: 255
      example: "categories"

    GalaxyElementValue:
      type: string
      maxLength: 65535
      example: "Military"

    GalaxyElement:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/GalaxyElementId"
        galaxy_cluster_id:
          $ref: "#/components/schemas/GalaxyClusterId"
        key:
          $ref: "#/components/schemas/GalaxyElementKey"
        value:
          $ref: "#/components/schemas/GalaxyElementValue"

    GalaxyClusterNoId:
      type: object
      properties:
        uuid:
          $ref: "#/components/schemas/UUID"
        collection_uuid:
          $ref: "#/components/schemas/UUID"
        type:
          $ref: "#/components/schemas/GalaxyClusterType"
        value:
          $ref: "#/components/schemas/GalaxyClusterValue"
        tag_name:
          $ref: "#/components/schemas/TagName"
        description:
          $ref: "#/components/schemas/GalaxyClusterDescription"
        galaxy_id:
          $ref: "#/components/schemas/GalaxyId"
        source:
          $ref: "#/components/schemas/GalaxyClusterSource"
        authors:
          $ref: "#/components/schemas/GalaxyClusterAuthors"
        version:
          $ref: "#/components/schemas/GalaxyClusterVersion"
        distribution:
          $ref: "#/components/schemas/DistributionLevelId"
        sharing_group_id:
          $ref: "#/components/schemas/SharingGroupId"
        org_id:
          $ref: "#/components/schemas/OrganisationId"
        orgc_id:
          $ref: "#/components/schemas/OrganisationId"
        default:
          $ref: "#/components/schemas/IsDefault"
        locked:
          $ref: "#/components/schemas/IsLocked"
        extends_uuid:
          $ref: "#/components/schemas/ExtendsUUID"
        extends_version:
          $ref: "#/components/schemas/GalaxyClusterVersion"
        published:
          $ref: "#/components/schemas/PublishedFlag"
        deleted:
          $ref: "#/components/schemas/SoftDeletedFlag"
        GalaxyElement:
          type: array
          items:
            $ref: "#/components/schemas/GalaxyElement"

    GalaxyCluster:
      description: "MISP galaxy is a simple method to express a large object called cluster that can be attached to MISP events or attributes."
      allOf:
        - type: object
          properties:
            id:
              $ref: "#/components/schemas/GalaxyClusterId"
        - $ref: "#/components/schemas/GalaxyClusterNoId"

    ExtendedGalaxy:
      description: "A galaxy with it's galaxy cluster details."
      allOf:
        - type: object
          properties:
            Galaxy:
              $ref: "#/components/schemas/Galaxy"
        - type: object
          properties:
            GalaxyCluster:
              type: array
              items:
                $ref: "#/components/schemas/GalaxyCluster"

    GalaxyMispFormat:
      description: "Galaxy and clusters representation in misp-galaxy format."
      type: object
      properties:
        name:
          $ref: "#/components/schemas/GalaxyName"
        type:
          $ref: "#/components/schemas/GalaxyType"
        authors:
          $ref: "#/components/schemas/GalaxyClusterAuthors"
        version:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/GalaxyClusterVersion"
        uuid:
          description: "Collection UUID."
          $ref: "#/components/schemas/UUID"
        source:
          $ref: "#/components/schemas/GalaxyClusterSource"
        values:
          type: array
          items:
            type: object
            properties:
              description:
                $ref: "#/components/schemas/GalaxyClusterDescription"
              uuid:
                description: "Galaxy Cluster UUID."
                $ref: "#/components/schemas/UUID"
              value:
                $ref: "#/components/schemas/GalaxyClusterValue"
              extends_uuid:
                $ref: "#/components/schemas/ExtendsUUID"
              extends_Version:
                $ref: "#/components/schemas/GalaxyClusterVersion"
              meta:
                description: "Each Galaxy element associated to this cluster represents a key-value property."
                type: object
                example:
                  - categories: "botnet"
                  - refs: "http://foo.bar"
                  - aliases:
                      - "malware"
                      - "win32"
                      - "windows"
                  - topics:
                      - "Windows"
                      - "Malware"

    GalaxyValueSearchFilter:
      description: "Text search term to find a matching galaxy name, namespace, description, kill_chain_order or uuid."
      type: string
      example: "botnet"

    # Tags
    TagId:
      type: string
      format: int32
      maxLength: 10
      example: "12345"

    TagName:
      type: string
      example: "tlp:white"
      maxLength: 255

    TagColour:
      type: string
      example: "#ffffff"
      maxLength: 7

    TagNumericalValue:
      type: string
      nullable: true
      format: int32
      example: "12345"

    HideTagFlag:
      type: boolean
      default: false

    TagNoId:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/TagName"
        colour:
          $ref: "#/components/schemas/TagColour"
        exportable:
          $ref: "#/components/schemas/IsExportable"
        org_id:
          $ref: "#/components/schemas/OrganisationId"
        user_id:
          $ref: "#/components/schemas/UserId"
        hide_tag:
          $ref: "#/components/schemas/HideTagFlag"
        numerical_value:
          $ref: "#/components/schemas/TagNumericalValue"
        is_galaxy:
          $ref: "#/components/schemas/IsGalaxy"
        is_custom_galaxy:
          $ref: "#/components/schemas/IsCustomGalaxy"
        inherited:
          $ref: "#/components/schemas/IsInherited"

    Tag:
      description: "A tag is a simple method to classify an event with a simple string. The tag name can be freely chosen. The tag name can be also chosen from a fixed machine-tag vocabulary called MISP taxonomies"
      allOf:
        - type: object
          properties:
            id:
              $ref: "#/components/schemas/TagId"
        - $ref: "#/components/schemas/TagNoId"

    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"

    TagCollectionId:
      type: string
      format: int32
      maxLength: 10
      example: "12345"

    # General
    ObjectId:
      type: string
      format: int32
      maxLength: 10
      example: "12345"
      default: "0"

    ObjectRelation:
      type: string
      maxLength: 255
      default: null

    DistributionLevelId:
      type: string
      format: int32
      enum: ["0", "1", "2", "3", "4", "5"]
      description: >
        Who will be able to see this event once it becomes published and eventually when it becomes pulled:
          * `0` - Your organization only
          * `1` - This community only
          * `2` - Connected communities
          * `3` - All communities
          * `4` - Sharing group
          * `5` - Inherit Event

    ThreatLevelId:
      type: string
      format: int32
      enum: ["1", "2", "3", "4"]
      description: >
        Represents the threat level.
          * `1` - High
          * `2` - Medium
          * `3` - Low
          * `4` - Undefined

    AnalysisLevelId:
      type: string
      format: int32
      enum: ["0", "1", "2"]
      description: >
        Represents the analysis maturity level.
          * `0` - Initial
          * `1` - Ongoing
          * `2` - Complete

    ToIDS:
      type: boolean
      default: true

    SharingGroupId:
      type: string
      nullable: true
      format: int32
      maxLength: 10
      example: "1"

    UUID:
      type: string
      format: uuid
      maxLength: 36
      example: "c99506a6-1255-4b71-afa5-7b8ba48c3b1b"

    ExtendsUUID:
      type: string
      nullable: true
      maxLength: 36
      example: "c99506a6-1255-4b71-afa5-7b8ba48c3b1b"

    Timestamp:
      type: string
      format: int64
      default: "0"
      example: "1617875568"

    MicroTimestamp:
      type: string
      format: int64
      default: null
      example: "1581984000000000"

    SoftDeletedFlag:
      type: boolean
      default: false

    PublishedFlag:
      type: boolean
      default: false

    DisableCorrelationFlag:
      type: boolean
      default: false

    OrganisationId:
      type: string
      format: int32
      maxLength: 10
      example: "12345"

    OrganisationName:
      type: string
      maxLength: 255
      example: "ORGNAME"

    IsExportable:
      type: boolean
      default: true

    IsGalaxy:
      type: boolean
      default: true

    IsCustomGalaxy:
      type: boolean
      default: true

    IsInherited:
      type: integer
      format: int32
      default: 1

    IsLocked:
      type: boolean

    IsDefault:
      type: boolean

    IsLocal:
      type: boolean

    Icon:
      type: string
      maxLength: 255
      example: "globe"

    UserId:
      type: string
      format: int32
      maxLength: 10
      example: "12345"

    PageSearchFilter:
      type: integer
      format: int32
      nullable: true
      minimum: 0

    LimitSearchFilter:
      type: integer
      format: int32
      nullable: true
      minimum: 0

    SortSearchField:
      description: Field to be used to sort the result
      type: string
      nullable: true
      example: "timestamp"

    DirectionSearchField:
      description: Sort direction of the result
      type: string
      nullable: true
      default: "asc"
      enum:
        - "asc"
        - "desc"

    DateRestSearchFilter:
      description: "You can use any of the valid time related filters (examples: 7d, timestamps, [14d, 7d] for ranges, etc.)"
      type: string
      nullable: true

    LastRestSearchFilter:
      description: "Published within the last x amount of time, where x can be defined in days, hours, minutes (for example 5d or 12h or 30m)"
      type: integer
      nullable: true

    TagsRestSearchFilter:
      nullable: true
      type: array
      items:
        type: string
        example: "tlp:amber"

    MetadataRestSearchFilter:
      description: "Will only return the metadata of the given query scope, contained data is omitted."
      nullable: true
      type: boolean

    IncludeEventUUIDRestSearchFlag:
      description: "Include matching eventUuids in the response"
      type: boolean
      default: false

    IncludeEventTagsRestSearchFlag:
      description: "Include tags of matching events in the response"
      type: boolean
      default: false

    IncludeProposalsRestSearchFlag:
      description: "Include proposals of matching events in the response"
      type: boolean
      default: false

    EnforceWarninglistRestSearchFilter:
      description: "Should the warning list be enforced. Adds blocked field for matching attributes"
      nullable: true
      type: boolean

    RequestedAttributesRestSearchFilter:
      description: "List of properties that will be selected in the CSV export"
      type: array
      items:
        type: string
        example: "id"

    IncludeContextRestSearchFlag:
      description: "Adds events context fields in the CSV export"
      nullable: true
      type: boolean

    HeaderlessRestSearchFlag:
      description: "Removes header in the CSV export"
      nullable: true
      type: boolean

    IncludeWarninglistHitsRestSearchFlag:
      nullable: true
      type: boolean

    AttackGalaxyRestSearchFilter:
      nullable: true
      type: string
      example: "mitre-attack"

    ExcludeLocalTagsRestSearchFilter:
      description: "Exclude local tags from the export"
      nullable: true
      type: boolean

    IncludeSightingDbRestSearchFlag:
      description: "Extend response with Sightings DB results if the module is enabled"
      nullable: true
      type: boolean

    IncludeCorrelationsRestSearchFlag:
      nullable: true
      type: boolean

    ModelOverridesRestSearchFilter:
      description: "Model parameters to override decaying model calculation"
      nullable: true
      $ref: "#/components/schemas/DecayingModelParameters"

    ObjectRelationRestSearchFilter:
      description: "Filter by the attribute object relation value"
      nullable: true
      type: string
      example: "filepath"

    ApiError:
      type: object
      required:
        - name
        - message
        - url
      properties:
        name:
          type: string
        message:
          type: string
        url:
          type: string
          example: "/attributes"

    UnauthorizedApiError:
      type: object
      required:
        - name
        - message
        - url
      properties:
        name:
          type: string
          example: "Authentication failed. Please make sure you pass the API key of an API enabled user along in the Authorization header."
        message:
          type: string
          example: "Authentication failed. Please make sure you pass the API key of an API enabled user along in the Authorization header."
        url:
          type: string
          example: "/attributes"

    NotFoundApiError:
      type: object
      required:
        - name
        - message
        - url
      properties:
        name:
          type: string
          example: "Invalid attribute"
        message:
          type: string
          example: "Invalid attribute"
        url:
          type: string
          example: "/attributes/1234"

  parameters:
    eventIdParameter:
      name: eventId
      in: path
      description: "UUID or numeric ID of the event"
      required: true
      schema:
        oneOf:
          - $ref: "#/components/schemas/EventId"
          - $ref: "#/components/schemas/UUID"

    attributeIdParameter:
      name: attributeId
      in: path
      description: "UUID or numeric ID of the attribute"
      required: true
      schema:
        oneOf:
          - $ref: "#/components/schemas/AttributeId"
          - $ref: "#/components/schemas/UUID"

    tagIdParameter:
      name: tagId
      in: path
      description: Numeric ID of the attribute
      required: true
      schema:
        $ref: "#/components/schemas/TagId"

    galaxyIdParameter:
      name: galaxyId
      in: path
      description: "UUID or numeric ID of the galaxy"
      required: true
      schema:
        oneOf:
          - $ref: "#/components/schemas/GalaxyId"
          - $ref: "#/components/schemas/UUID"

    attachTargetIdParameter:
      name: attachTargetId
      in: path
      description: "UUID or numeric ID of the target entity (Event, Attribute or TagCollection)"
      required: true
      schema:
        anyOf:
          - $ref: "#/components/schemas/EventId"
          - $ref: "#/components/schemas/AttributeId"
          - $ref: "#/components/schemas/TagCollectionId"

    attachTargetTypeParameter:
      name: attachTargetType
      in: path
      description: "Type of the target entity to attach to the galaxy cluster."
      required: true
      schema:
        type: string
        enum:
          - "event"
          - "attribute"
          - "tag_collection"

    returnFormatParameter:
      name: returnFormat
      in: query
      description: Return type of the restSearch query.
      required: true
      schema:
        type: string
        enum:
          - json
          - xml
          - download
          - stix
          - stix2

    attributeStatisticsContextParameter:
      name: context
      in: path
      required: true
      description: Context of the statistics.
      schema:
        type: string
        default: "type"
        enum:
          - type
          - category

    attributeStatisticsPercentageParameter:
      name: percentage
      in: path
      required: true
      description: "`0` to show attribute count, `1` for showing percentages"
      schema:
        type: integer
        default: 0

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization

  requestBodies:
    AddAttributeRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AttributeNoId"

    EditAttributeRequest:
      required: true
      content:
        application/json:
          schema:
            type: object
            $ref: "#/components/schemas/Attribute"

    RestSearchAttributesRequest:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              page:
                $ref: "#/components/schemas/PageSearchFilter"
              limit:
                $ref: "#/components/schemas/LimitSearchFilter"
              value:
                $ref: "#/components/schemas/AttributeValue"
              type:
                $ref: "#/components/schemas/AttributeType"
              category:
                $ref: "#/components/schemas/AttributeCategory"
              org:
                oneOf:
                  - $ref: "#/components/schemas/OrganisationId"
                  - $ref: "#/components/schemas/OrganisationName"
              tags:
                $ref: "#/components/schemas/TagsRestSearchFilter"
              from:
                $ref: "#/components/schemas/DateRestSearchFilter"
              to:
                $ref: "#/components/schemas/DateRestSearchFilter"
              last:
                $ref: "#/components/schemas/LastRestSearchFilter"
              eventid:
                $ref: "#/components/schemas/EventId"
              withAttachments:
                description: "Extends the response with the base64 representation of the attachment, if there is one"
                type: boolean
                default: false
              uuid:
                $ref: "#/components/schemas/UUID"
              publish_timestamp:
                $ref: "#/components/schemas/Timestamp"
              published:
                $ref: "#/components/schemas/PublishedFlag"
              timestamp:
                $ref: "#/components/schemas/Timestamp"
              attribute_timestamp:
                description: "The timestamp at which the attribute was last modified"
                $ref: "#/components/schemas/Timestamp"
              enforceWarninglist:
                $ref: "#/components/schemas/EnforceWarninglistRestSearchFilter"
              to_ids:
                description: "The state of the `to_ids` flag"
                $ref: "#/components/schemas/ToIDS"
              deleted:
                description: "Include deleted elements"
                $ref: "#/components/schemas/SoftDeletedFlag"
              event_timestamp:
                description: "The timestamp at which the event was last modified"
                $ref: "#/components/schemas/Timestamp"
              threat_level_id:
                $ref: "#/components/schemas/ThreatLevelId"
              eventinfo:
                description: "Quick event description"
                type: string
              decayingModel:
                description: "Specify the decaying model from which the decaying score should be calculated"
                type: string
              score:
                description: "An alias to override on-the-fly the threshold of the decaying model"
                type: string
              first_seen:
                description: "Seen within the last x amount of time, where x can be defined in days, hours, minutes (for example 5d or 12h or 30m)"
                type: string
              last_seen:
                description: "Seen within the last x amount of time, where x can be defined in days, hours, minutes (for example 5d or 12h or 30m)"
                type: string
              includeEventUuid:
                $ref: "#/components/schemas/IncludeEventUUIDRestSearchFlag"
              includeEventTags:
                $ref: "#/components/schemas/IncludeEventTagsRestSearchFlag"
              includeProposals:
                $ref: "#/components/schemas/IncludeProposalsRestSearchFlag"
              requested_attributes:
                $ref: "#/components/schemas/RequestedAttributesRestSearchFilter"
              includeContext:
                $ref: "#/components/schemas/IncludeContextRestSearchFlag"
              headerless:
                $ref: "#/components/schemas/HeaderlessRestSearchFlag"
              includeWarninglistHits:
                $ref: "#/components/schemas/IncludeWarninglistHitsRestSearchFlag"
              attackGalaxy:
                $ref: "#/components/schemas/AttackGalaxyRestSearchFilter"
              object_relation:
                $ref: "#/components/schemas/ObjectRelationRestSearchFilter"
              includeSightings:
                $ref: "#/components/schemas/IncludeSightingDbRestSearchFlag"
              includeCorrelations:
                $ref: "#/components/schemas/IncludeCorrelationsRestSearchFlag"
              modelOverrides:
                $ref: "#/components/schemas/ModelOverridesRestSearchFilter"
              includeDecayScore:
                description: "Include all enabled decaying score"
                type: boolean
                default: false
              includeFullModel:
                description: "Include all model information of matching events in the response"
                type: boolean
                default: false
              excludeDecayed:
                description: "Should the decayed elements by excluded"
                type: boolean
                default: false

    AddEventRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/EventNoId"

    EditEventRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/EventNoId"

    SearchEventRequest:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              page:
                $ref: "#/components/schemas/PageSearchFilter"
              limit:
                $ref: "#/components/schemas/LimitSearchFilter"
              sort:
                $ref: "#/components/schemas/SortSearchField"
              direction:
                $ref: "#/components/schemas/DirectionSearchField"
              minimal:
                description: "Returns a minimal version of the event, only events with `attributeCount` > 0 will be returned"
                type: boolean
                nullable: true
                default: false
              attribute:
                description: "Filter events matching the given string with attributes values"
                type: string
                nullable: true
                example: "foo"
              eventid:
                description: "Filter events by matching an specifict event id"
                nullable: true
                $ref: "#/components/schemas/EventId"
              datefrom:
                description: "Event creation date is greater or equal"
                type: string
                nullable: true
                format: date
                example: "2021-03-05"
              dateuntil:
                description: "Event creation date is less or equal"
                type: string
                nullable: true
                format: date
                example: "2021-03-05"
              org:
                description: "Filter events by matching an the creator organisation name"
                type: string
                nullable: true
                example: "CIRCL"
              eventinfo:
                description: "Filter events by matching the event info text"
                type: string
                nullable: true
                example: "Phishing campaing"
              tag:
                description: "Filter events by matching the event tags with a given tag name"
                nullable: true
                $ref: "#/components/schemas/TagName"
                example: "tlp:white"
              tags:
                description: "Filter events by matching *any* of the event tags of a given list of tag names"
                type: array
                nullable: true
                items:
                  $ref: "#/components/schemas/TagName"
                example:
                  - "tlp:amber"
                  - 'cycat:scope="exploit"'
              distribution:
                description: "Filter events by matching the given distribution level id"
                nullable: true
                $ref: "#/components/schemas/DistributionLevelId"
              sharinggroup:
                description: "Filter events by matching the given sharing group id"
                nullable: true
                $ref: "#/components/schemas/SharingGroupId"
              analysis:
                description: "Filter events by matching the given analysis level id"
                nullable: true
                $ref: "#/components/schemas/AnalysisLevelId"
              threatlevel:
                description: "Filter events by matching the given threat level id"
                nullable: true
                $ref: "#/components/schemas/ThreatLevelId"
              email:
                description: "Filter events by matching the event creator user email"
                type: string
                nullable: true
                format: email
                example: "admin@admin.test"
              hasproposal:
                description: "Filter events by checking if it has attributes with change proposals. Possible values: `0`, `1`"
                type: string
                nullable: true
                example: "1"
              timestamp:
                description: "Event timestamp greater or equal"
                type: string
                nullable: true
                example: "1"
              publish_timestamp:
                description: "Event publish timestamp greater or equal"
                type: string
                nullable: true
                example: "1"

    RestSearchEventsRequest:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              page:
                $ref: "#/components/schemas/PageSearchFilter"
              limit:
                $ref: "#/components/schemas/LimitSearchFilter"
              value:
                $ref: "#/components/schemas/AttributeValue"
              type:
                $ref: "#/components/schemas/AttributeType"
              category:
                $ref: "#/components/schemas/AttributeCategory"
              org:
                oneOf:
                  - $ref: "#/components/schemas/OrganisationId"
                  - $ref: "#/components/schemas/OrganisationName"
              tags:
                $ref: "#/components/schemas/TagsRestSearchFilter"
              searchall:
                description: "Search events by matching any tag names, event descriptions, attribute values or attribute comments"
                type: string
                example: malware
              from:
                $ref: "#/components/schemas/DateRestSearchFilter"
              to:
                $ref: "#/components/schemas/DateRestSearchFilter"
              last:
                $ref: "#/components/schemas/LastRestSearchFilter"
              eventid:
                $ref: "#/components/schemas/EventId"
              withAttachments:
                description: "Extends the response with the base64 representation of the attachment, if there is one"
                type: boolean
                default: false
              metadata:
                $ref: "#/components/schemas/MetadataRestSearchFilter"
              uuid:
                $ref: "#/components/schemas/UUID"
              publish_timestamp:
                $ref: "#/components/schemas/Timestamp"
              timestamp:
                $ref: "#/components/schemas/Timestamp"
              published:
                $ref: "#/components/schemas/PublishedFlag"
              enforceWarninglist:
                $ref: "#/components/schemas/EnforceWarninglistRestSearchFilter"
              sgReferenceOnly:
                description: "Will only return the sharing group ID"
                type: boolean
              requested_attributes:
                $ref: "#/components/schemas/RequestedAttributesRestSearchFilter"
              includeContext:
                $ref: "#/components/schemas/IncludeContextRestSearchFlag"
              headerless:
                $ref: "#/components/schemas/HeaderlessRestSearchFlag"
              includeWarninglistHits:
                $ref: "#/components/schemas/IncludeWarninglistHitsRestSearchFlag"
              attackGalaxy:
                $ref: "#/components/schemas/AttackGalaxyRestSearchFilter"
              to_ids:
                $ref: "#/components/schemas/ToIDS"
              deleted:
                description: "Include deleted elements"
                $ref: "#/components/schemas/SoftDeletedFlag"
              excludeLocalTags:
                $ref: "#/components/schemas/ExcludeLocalTagsRestSearchFilter"
              date:
                $ref: "#/components/schemas/DateRestSearchFilter"
              includeSightingdb:
                $ref: "#/components/schemas/IncludeSightingDbRestSearchFlag"
              tag:
                $ref: "#/components/schemas/TagName"
              object_relation:
                $ref: "#/components/schemas/ObjectRelationRestSearchFilter"
              threat_level_id:
                $ref: "#/components/schemas/ThreatLevelId"

    SearchGalaxyRequest:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              page:
                $ref: "#/components/schemas/GalaxyValueSearchFilter"

    ImportGalaxyClusterRequest:
      required: true
      content:
        application/json:
          schema:
            type: array
            items:
              allOf:
                - type: object
                  properties:
                    GalaxyCluster:
                      $ref: "#/components/schemas/GalaxyClusterNoId"
                - type: object
                  properties:
                    Galaxy:
                      type: object
                      properties:
                        uuid:
                          $ref: "#/components/schemas/UUID"

    ExportGalaxyClusterRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              Galaxy:
                type: object
                properties:
                  default:
                    description: "`true` to filter out galaxy clusters with `default=true` set."
                    type: boolean
                  custom:
                    description: "`true` to filter out galaxy clusters with `default=false` set"
                    type: boolean
                  distribution:
                    $ref: "#/components/schemas/DistributionLevelId"
                  format:
                    description: "If set to `misp-galaxy` result set is in the misp-galaxy format."
                    type: string
                    enum:
                      - "default"
                      - "misp-galaxy"
                  download:
                    description: "`true` returns the response as a json file attachment, `false` returns the response in the response body."
                    type: boolean

    AttachGalaxyClusterRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              Galaxy:
                type: object
                properties:
                  target_id:
                    description: "Target galaxy cluster to attach."
                    type: integer
                    format: int32
                    example: 1235

  responses:
    AttributeResponse:
      description: "An attribute"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Attribute"

    AttributeListResponse:
      description: "A list of attributes"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AttributeList"

    DeleteAttributeResponse:
      description: "Delete attribute response"
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Attribute deleted.

    AddAttributeTagResponse:
      description: "Add attribute tag response"
      content:
        application/json:
          schema:
            type: object
            properties:
              saved:
                description: "`true` if the tag was succesfully added, `false` if it failed"
                type: boolean
                nullable: false
              success:
                description: "Present if the tag was succesfully added"
                type: string
                nullable: true
                example: "Tag added."
              check_publish:
                type: boolean
                nullable: true
              errors:
                type: string
                nullable: true
                example: Tag could not be added.

    RemoveAttributeTagResponse:
      description: "Remove attribute tag response"
      content:
        application/json:
          schema:
            type: object
            properties:
              saved:
                description: "`true` if the tag was succesfully removed, `false` if it failed"
                type: boolean
                nullable: false
              success:
                description: "Present if the tag was succesfully added"
                type: string
                nullable: true
                example: "Tag removed."
              check_publish:
                type: boolean
                nullable: true
              errors:
                type: string
                nullable: true
                example: Tag could not be added.

    AttributesRestSearchResponse:
      description: "Rest search attributes response"
      headers:
        X-Result-Count:
          $ref: "#/components/headers/X-Result-Count"
        X-Export-Module-Used:
          $ref: "#/components/headers/X-Export-Module-Used"
        X-Response-Format:
          $ref: "#/components/headers/X-Response-Format"
      content:
        application/json:
          schema:
            type: object
            properties:
              response:
                type: object
                properties:
                  Attribute:
                    $ref: "#/components/schemas/AttributeRestSearchList"

    AttributeStatisticsResponse:
      description: "Attribute statistics response"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AttributeStatisticsResponse"

    DescribeAttributeTypesResponse:
      description: "Describe attribute categories and types response"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DescribeAttributeTypesResponse"

    AddEventResponse:
      description: "A freshly created event"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreatedEvent"

    EditEventResponse:
      description: "A freshly updated event"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdatedEvent"

    DeleteEventResponse:
      description: "Delete event response"
      content:
        application/json:
          schema:
            type: object
            properties:
              saved:
                description: "`true` if the event was succesfully deleted, `false` if it failed"
                type: boolean
              success:
                description: "`true` if the event was succesfully deleted, `false` if it failed"
                nullable: true
                type: boolean
              name:
                type: string
                example: "Event deleted."
              message:
                type: string
                example: "Could not delete Event"
              url:
                type: string
                example: "/events/delete/1"
              errors:
                description: "Only present if an error occurred when deleting the event"
                type: string
                nullable: true
                example: "Event was not deleted."

    AddEventTagResponse:
      description: "Add event tag response"
      content:
        application/json:
          schema:
            type: object
            properties:
              saved:
                description: "`true` if the tag was succesfully added, `false` if it failed"
                type: boolean
                nullable: false
              success:
                description: "Present if the tag was succesfully added"
                type: string
                nullable: true
                example: "Tag added."
              check_publish:
                type: boolean
                nullable: true
              errors:
                type: string
                nullable: true
                example: Tag could not be added.

    RemoveEventTagResponse:
      description: "Remove event tag response"
      content:
        application/json:
          schema:
            type: object
            properties:
              saved:
                description: "`true` if the tag was succesfully removed, `false` if it failed"
                type: boolean
                nullable: false
              success:
                description: "Present if the tag was succesfully added"
                type: string
                nullable: true
                example: "Tag removed."
              check_publish:
                type: boolean
                nullable: true
              errors:
                type: string
                nullable: true
                example: Tag could not be added.

    ExtendedEventListResponse:
      description: "A list of events"
      headers:
        X-Result-Count:
          $ref: "#/components/headers/X-Result-Count"
      content:
        application/json:
          schema:
            oneOf:
              - $ref: "#/components/schemas/ExtendedEventList"
              - $ref: "#/components/schemas/MinimalEventList"

    ExtendedEventResponse:
      description: "An event with extended properties"
      content:
        application/json:
          schema:
            type: object
            properties:
              Event:
                $ref: "#/components/schemas/ExtendedEvent"

    EventsRestSearchResponse:
      description: "Rest search events response"
      headers:
        X-Result-Count:
          $ref: "#/components/headers/X-Result-Count"
        X-Export-Module-Used:
          $ref: "#/components/headers/X-Export-Module-Used"
        X-Response-Format:
          $ref: "#/components/headers/X-Response-Format"
      content:
        application/json:
          schema:
            type: object
            properties:
              response:
                $ref: "#/components/schemas/EventRestSearchList"

    GalaxyListResponse:
      description: "A list of galaxies"
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                Galaxy:
                  $ref: "#/components/schemas/Galaxy"

    ExtendedGalaxyResponse:
      description: "A extended galaxy response"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ExtendedGalaxy"

    UpdateGalaxiesResponse:
      description: "Update galaxies response"
      content:
        application/json:
          schema:
            type: object
            properties:
              saved:
                description: "Present and `true` if the galaxies were succesfully updated."
                nullable: true
                type: boolean
              success:
                description: "Present and `true` if the galaxies were succesfully updated."
                nullable: true
                type: boolean
              name:
                type: string
                example: "Galaxies updated."
              message:
                type: string
                example: "Galaxies updated."
              url:
                type: string
                example: "/galaxies/update"

    DeleteGalaxyResponse:
      description: "Delete galaxy response"
      content:
        application/json:
          schema:
            type: object
            properties:
              saved:
                description: "Present and `true` if the galaxy was succesfully removed."
                nullable: true
                type: boolean
              success:
                description: "Present and `true` if the galaxy was succesfully removed."
                nullable: true
                type: boolean
              name:
                type: string
                example: "Galaxy deleted"
              message:
                type: string
                example: "Galaxy deleted"
              url:
                type: string
                example: "/galaxies/delete"

    ImportGalaxyClusterResponse:
      description: "Import galaxy cluster response"
      content:
        application/json:
          schema:
            type: object
            properties:
              saved:
                description: "Present and `true` if the galaxy was succesfully imported."
                nullable: true
                type: boolean
              success:
                description: "Present and `true` if the galaxy was succesfully imported."
                nullable: true
                type: boolean
              name:
                type: string
                example: "'Galaxy clusters imported. 1 imported, 0 ignored, 0 failed."
              message:
                type: string
                example: "'Galaxy clusters imported. 1 imported, 0 ignored, 0 failed."
              url:
                type: string
                example: "/galaxies/import"

    ExportGalaxyClustersResponse:
      description: "Export galaxy clusters response"
      content:
        application/json:
          schema:
            oneOf:
              - type: array
                items:
                  $ref: "#/components/schemas/GalaxyCluster"
              - $ref: "#/components/schemas/GalaxyMispFormat"

    AttachGalaxyClusterResponse:
      description: "Attach galaxy cluster response"
      content:
        application/json:
          schema:
            type: object
            properties:
              saved:
                description: "Present and `true` if the galaxy cluster was succesfully attached."
                type: boolean
              success:
                description: "Status message of the operation."
                type: string
                example: "Cluster attached."
              check_publish:
                type: boolean

    ApiErrorResponse:
      description: "Unexpected API error"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiError"

    NotFoundApiErrorResponse:
      description: "The specified resource was not found"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NotFoundApiError"

    UnauthorizedApiErrorResponse:
      description: "Authentication failed. Please make sure you pass the API key of an API enabled user along in the Authorization header."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UnauthorizedApiError"

  headers:
    X-Result-Count:
      description: Result set count
      schema:
        type: integer

    X-Export-Module-Used:
      description: Export module used
      schema:
        type: string
        enum:
          - json
          - xml
          - download
          - stix
          - stix2

    X-Response-Format:
      description: Response format
      schema:
        type: string
        enum:
          - json
          - xml
          - download
          - stix
          - stix2

security:
  - ApiKeyAuth: []
