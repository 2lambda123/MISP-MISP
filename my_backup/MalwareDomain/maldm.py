import requests
from pymisp.tools import GenericObjectGenerator
import pymisp
import keys
import json

misp_url = "https://10.2.65.31/"
misp_key = "7SYHNZovnNz9o8hgnjOOcPt36KvrEmXK1ajINifd"

def get_Data_Page():
	list_dm_mal = []
	f = open('data_page.txt','r')
	for line in f:
		if 'onmouseout="this.style.backgroundColor' in line:
			dm_mal = get_Data_Line(line)
			list_dm_mal.append(dm_mal)
	return list_dm_mal

"""<tr bgcolor="#d8d8d8" onmouseover="this.style.backgroundColor='#b6bac6'" onmouseout="this.style.
backgroundColor='#d8d8d8'"><td><nobr>2017/12/04_18:50</nobr></td><td>textspeier.de</td><td>104.27.163.228</td>
<td>-</td>
<td>phishing/fraud</td><td>13335</td><td align="center">
<img src="images/blank.gif" class="flags flag-US" alt="US" title="United States"/></td></tr>"""

def get_Data_Line(line):
	
	dm_mal = {}

	#get datetime
	line = line.replace("<wbr>",'')
	line = line.split('>')
	datetime = line[3]
	datetime = datetime[:datetime.find('</nobr')]
	datetime = datetime.replace('/','-')
	datetime = datetime.replace("_"," ")
	#get domain
	domain = line[6]
	domain = domain[:domain.find('</td')]
	#get ip address
	ip_address = line[8]
	ip_address = ip_address[:ip_address.find('</td')]
	#get reverse lookup
	reverse_lookup = line[10]
	reverse_lookup = reverse_lookup[:reverse_lookup.find('</td')]
	#get description
	description = line[12]
	description = description[:description.find('</td')]
	#get asn
	asn = line[14]
	asn = asn[:asn.find('</td')]
	#get country
	country = line[16]
	country = country[country.find('title="')+len('title="'):country.find('"/')]
	
	dm_mal['datetime'] = datetime
	dm_mal['domain'] = domain
	dm_mal['ip_address'] = ip_address
	dm_mal['reverse_lookup'] = reverse_lookup
	dm_mal['description'] = description
	dm_mal['asn'] = asn
	dm_mal['country'] = country

	return dm_mal



def main():
	
	misp= pymisp.ExpandedPyMISP(misp_url, misp_key, False)
	event= pymisp.MISPEvent()
	event.info= 'Malware Domain List'
	
	for i in range(23):
		url = 'https://www.malwaredomainlist.com/mdl2.php?inactive=&sort=Date&search=&colsearch=All&ascordesc=DESC&quantity=100&page='
		url+=str(i)
		print("Page"+str(i))
		try:
			#data = get_Data_page(url)
			#print ("Done page " + str(i))
			
			r = requests.get(url)
			r.encoding = 'utf-8'
			data = r.text
			f = open('data_page.txt','w')
			f.write(data)

			list_dm_mal = get_Data_Page()

		except:
			continue
		for dm_mal in list_dm_mal:
			#print('a')
			#= {'':{'value':dm_mal[''],'type':''}}
			datetime = {'datetime':{'value':dm_mal['datetime'],'type':'datetime'}}
			domain ={'domain':{'value':dm_mal['domain'],'type':'url'}}
			ip_address = {'ip address':{'value':dm_mal['ip_address'],'type':'ip-dst'}}
			reverse_lookup = {'reverse lookup':{'value':dm_mal['reverse_lookup'],'type':'text'}}
			description = {'description':{'value':dm_mal['description'],'type':'text'}}
			asn = {'asn':{'value':dm_mal['asn'],'type':'counter'}}
			country = {'country':{'value':dm_mal['country'],'type':'text'}}
			misp_object = GenericObjectGenerator('malware-domain')
			attributeAsDict=[datetime,domain,ip_address,reverse_lookup,description,asn,country]
			misp_object.generate_attributes(attributeAsDict)
			event.add_object(misp_object)		
	misp.add_event(event)
			
if __name__ == '__main__':
	main()
	print("Done!!")

